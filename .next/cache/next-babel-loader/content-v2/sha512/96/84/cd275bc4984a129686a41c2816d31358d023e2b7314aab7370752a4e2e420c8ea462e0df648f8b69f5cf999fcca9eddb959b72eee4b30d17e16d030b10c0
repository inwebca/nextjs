{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\react\\\\nextjs-2\\\\pages\\\\[meetupId]\\\\index.js\";\nimport { MongoClient } from \"mongodb\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nconst MeetupDetailsPage = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"test\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this) // <MeetupDetail\n  //   image={props.meetupData.image}\n  //   title={props.meetupData.title}\n  //   address={props.meetupData.address}\n  //   description={props.meetupData.description}\n  // />\n  ;\n};\n\nexport const getStaticProps = async context => {\n  const meetupId = context.params;\n  console.log(meetupId);\n  const client = await MongoClient.connect(\"mongodb+srv://admin:JNbLkoH95HK6UXIF@cluster0.1q90f.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const selectedMeetup = await meetupsCollection.findOne({\n    id: meetupId\n  });\n  console.log(selectedMeetup);\n  client.close();\n  return {\n    props: {\n      meetupData: [selectedMeetup]\n    }\n  };\n};\nexport const getStaticPaths = async () => {\n  const client = await MongoClient.connect(\"mongodb+srv://admin:JNbLkoH95HK6UXIF@cluster0.1q90f.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetups = await meetupsCollection.find({}, {\n    id: 1\n  }).toArray();\n  console.log(meetups);\n  debugger;\n  client.close();\n  return {\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup.id.toString()\n      }\n    })),\n    fallback: false\n  };\n};\nexport default MeetupDetailsPage;","map":{"version":3,"sources":["C:/react/nextjs-2/pages/[meetupId]/index.js"],"names":["MongoClient","MeetupDetail","MeetupDetailsPage","props","getStaticProps","context","meetupId","params","console","log","client","connect","db","meetupsCollection","collection","selectedMeetup","findOne","id","close","meetupData","getStaticPaths","meetups","find","toArray","paths","map","meetup","toString","fallback"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,SAA5B;AACA,OAAOC,YAAP,MAAyB,uCAAzB;;AAEA,MAAMC,iBAAiB,GAAIC,KAAD,IAAW;AACnC,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CAEE;AACA;AACA;AACA;AACA;AACA;AAPF;AASD,CAVD;;AAYA,OAAO,MAAMC,cAAc,GAAG,MAAOC,OAAP,IAAmB;AAC/C,QAAMC,QAAQ,GAAGD,OAAO,CAACE,MAAzB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AAEA,QAAMI,MAAM,GAAG,MAAMV,WAAW,CAACW,OAAZ,CACnB,qGADmB,CAArB;AAIA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMC,cAAc,GAAG,MAAMF,iBAAiB,CAACG,OAAlB,CAA0B;AAAEC,IAAAA,EAAE,EAAEX;AAAN,GAA1B,CAA7B;AACEE,EAAAA,OAAO,CAACC,GAAR,CAAYM,cAAZ;AAEFL,EAAAA,MAAM,CAACQ,KAAP;AAEA,SAAO;AACLf,IAAAA,KAAK,EAAE;AACLgB,MAAAA,UAAU,EAAE,CAACJ,cAAD;AADP;AADF,GAAP;AAKD,CArBM;AAuBP,OAAO,MAAMK,cAAc,GAAG,YAAY;AACxC,QAAMV,MAAM,GAAG,MAAMV,WAAW,CAACW,OAAZ,CACnB,qGADmB,CAArB;AAIA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMO,OAAO,GAAG,MAAMR,iBAAiB,CAACS,IAAlB,CAAuB,EAAvB,EAA2B;AAAEL,IAAAA,EAAE,EAAE;AAAN,GAA3B,EAAsCM,OAAtC,EAAtB;AACEf,EAAAA,OAAO,CAACC,GAAR,CAAYY,OAAZ;AACA;AAEFX,EAAAA,MAAM,CAACQ,KAAP;AAEA,SAAO;AACLM,IAAAA,KAAK,EAAEH,OAAO,CAACI,GAAR,CAAaC,MAAD,KAAa;AAC9BnB,MAAAA,MAAM,EAAE;AACND,QAAAA,QAAQ,EAAEoB,MAAM,CAACT,EAAP,CAAUU,QAAV;AADJ;AADsB,KAAb,CAAZ,CADF;AAMLC,IAAAA,QAAQ,EAAE;AANL,GAAP;AAQD,CAtBM;AAwBP,eAAe1B,iBAAf","sourcesContent":["import { MongoClient } from \"mongodb\";\r\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\r\n\r\nconst MeetupDetailsPage = (props) => {\r\n  return (\r\n    <div>test</div>\r\n    // <MeetupDetail\r\n    //   image={props.meetupData.image}\r\n    //   title={props.meetupData.title}\r\n    //   address={props.meetupData.address}\r\n    //   description={props.meetupData.description}\r\n    // />\r\n  );\r\n};\r\n\r\nexport const getStaticProps = async (context) => {\r\n  const meetupId = context.params;\r\n  console.log(meetupId);\r\n\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://admin:JNbLkoH95HK6UXIF@cluster0.1q90f.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n  );\r\n\r\n  const db = client.db();\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n\r\n  const selectedMeetup = await meetupsCollection.findOne({ id: meetupId });\r\n    console.log(selectedMeetup);\r\n\r\n  client.close();\r\n\r\n  return {\r\n    props: {\r\n      meetupData: [selectedMeetup],\r\n    }\r\n  }\r\n};\r\n\r\nexport const getStaticPaths = async () => {\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://admin:JNbLkoH95HK6UXIF@cluster0.1q90f.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n  );\r\n\r\n  const db = client.db();\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n\r\n  const meetups = await meetupsCollection.find({}, { id: 1 }).toArray();\r\n    console.log(meetups);\r\n    debugger;\r\n\r\n  client.close();\r\n\r\n  return {\r\n    paths: meetups.map((meetup) => ({\r\n      params: {\r\n        meetupId: meetup.id.toString(),\r\n      },\r\n    })),\r\n    fallback: false,\r\n  };\r\n};\r\n\r\nexport default MeetupDetailsPage;\r\n"]},"metadata":{},"sourceType":"module"}