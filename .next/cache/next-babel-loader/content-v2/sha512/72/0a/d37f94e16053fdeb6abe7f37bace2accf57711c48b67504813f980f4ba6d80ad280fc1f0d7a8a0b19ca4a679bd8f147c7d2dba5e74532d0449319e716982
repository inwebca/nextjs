{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\react\\\\nextjs-2\\\\pages\\\\[meetupId]\\\\index.js\";\nimport { MongoClient } from \"mongodb\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nconst MeetupDetailsPage = props => {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: props.meetupData.image,\n    title: props.meetupData.title,\n    address: props.meetupData.address,\n    description: props.meetupData.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n\nexport const getStaticProps = async context => {\n  const meetupId = context.params;\n  console.log(meetupId);\n  const client = await MongoClient.connect(\"mongodb+srv://admin:JNbLkoH95HK6UXIF@cluster0.1q90f.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const selectedMeetup = await meetupsCollection.findOne({\n    id: meetupId\n  });\n  console.log(selectedMeetup);\n  client.close();\n  return {\n    props: {\n      meetupData: selectedMeetup\n    }\n  };\n};\nexport const getStaticPaths = async () => {\n  const client = await MongoClient.connect(\"mongodb+srv://admin:JNbLkoH95HK6UXIF@cluster0.1q90f.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetups = await meetupsCollection.find({}, {\n    id: 1\n  }).toArray();\n  client.close();\n  return {\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup.id\n      }\n    })),\n    fallback: false\n  };\n};\nexport default MeetupDetailsPage;","map":{"version":3,"sources":["C:/react/nextjs-2/pages/[meetupId]/index.js"],"names":["MongoClient","MeetupDetail","MeetupDetailsPage","props","meetupData","image","title","address","description","getStaticProps","context","meetupId","params","console","log","client","connect","db","meetupsCollection","collection","selectedMeetup","findOne","id","close","getStaticPaths","meetups","find","toArray","paths","map","meetup","fallback"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,SAA5B;AACA,OAAOC,YAAP,MAAyB,uCAAzB;;AAEA,MAAMC,iBAAiB,GAAIC,KAAD,IAAW;AACnC,sBACE,QAAC,YAAD;AACE,IAAA,KAAK,EAAEA,KAAK,CAACC,UAAN,CAAiBC,KAD1B;AAEE,IAAA,KAAK,EAAEF,KAAK,CAACC,UAAN,CAAiBE,KAF1B;AAGE,IAAA,OAAO,EAAEH,KAAK,CAACC,UAAN,CAAiBG,OAH5B;AAIE,IAAA,WAAW,EAAEJ,KAAK,CAACC,UAAN,CAAiBI;AAJhC;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CATD;;AAWA,OAAO,MAAMC,cAAc,GAAG,MAAOC,OAAP,IAAmB;AAC/C,QAAMC,QAAQ,GAAGD,OAAO,CAACE,MAAzB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AAEA,QAAMI,MAAM,GAAG,MAAMf,WAAW,CAACgB,OAAZ,CACnB,qGADmB,CAArB;AAIA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMC,cAAc,GAAG,MAAMF,iBAAiB,CAACG,OAAlB,CAA0B;AAAEC,IAAAA,EAAE,EAAEX;AAAN,GAA1B,CAA7B;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYM,cAAZ;AAEAL,EAAAA,MAAM,CAACQ,KAAP;AAEA,SAAO;AACLpB,IAAAA,KAAK,EAAE;AACLC,MAAAA,UAAU,EAAEgB;AADP;AADF,GAAP;AAKD,CArBM;AAuBP,OAAO,MAAMI,cAAc,GAAG,YAAY;AACxC,QAAMT,MAAM,GAAG,MAAMf,WAAW,CAACgB,OAAZ,CACnB,qGADmB,CAArB;AAIA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMM,OAAO,GAAG,MAAMP,iBAAiB,CAACQ,IAAlB,CAAuB,EAAvB,EAA2B;AAAEJ,IAAAA,EAAE,EAAE;AAAN,GAA3B,EAAsCK,OAAtC,EAAtB;AAEAZ,EAAAA,MAAM,CAACQ,KAAP;AAEA,SAAO;AACLK,IAAAA,KAAK,EAAEH,OAAO,CAACI,GAAR,CAAaC,MAAD,KAAa;AAC9BlB,MAAAA,MAAM,EAAE;AACND,QAAAA,QAAQ,EAAEmB,MAAM,CAACR;AADX;AADsB,KAAb,CAAZ,CADF;AAMLS,IAAAA,QAAQ,EAAE;AANL,GAAP;AAQD,CApBM;AAsBP,eAAe7B,iBAAf","sourcesContent":["import { MongoClient } from \"mongodb\";\r\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\r\n\r\nconst MeetupDetailsPage = (props) => {\r\n  return (\r\n    <MeetupDetail\r\n      image={props.meetupData.image}\r\n      title={props.meetupData.title}\r\n      address={props.meetupData.address}\r\n      description={props.meetupData.description}\r\n    />\r\n  );\r\n};\r\n\r\nexport const getStaticProps = async (context) => {\r\n  const meetupId = context.params;\r\n  console.log(meetupId);\r\n\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://admin:JNbLkoH95HK6UXIF@cluster0.1q90f.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n  );\r\n\r\n  const db = client.db();\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n\r\n  const selectedMeetup = await meetupsCollection.findOne({ id: meetupId });\r\n  console.log(selectedMeetup);\r\n\r\n  client.close();\r\n\r\n  return {\r\n    props: {\r\n      meetupData: selectedMeetup,\r\n    }\r\n  }\r\n};\r\n\r\nexport const getStaticPaths = async () => {\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://admin:JNbLkoH95HK6UXIF@cluster0.1q90f.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n  );\r\n\r\n  const db = client.db();\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n\r\n  const meetups = await meetupsCollection.find({}, { id: 1 }).toArray();\r\n\r\n  client.close();\r\n\r\n  return {\r\n    paths: meetups.map((meetup) => ({\r\n      params: {\r\n        meetupId: meetup.id,\r\n      },\r\n    })),\r\n    fallback: false,\r\n  };\r\n};\r\n\r\nexport default MeetupDetailsPage;\r\n"]},"metadata":{},"sourceType":"module"}